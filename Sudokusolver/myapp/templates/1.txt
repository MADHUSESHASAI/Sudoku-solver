#1. for saving the matrix
def save_matrix_to_file(user, matrix_data):
    matrix_dir = 'C:\\Users\\ACER\\Desktop\\project\\Sudoku-solver\\Sudokusolver\\matrices\\'
    if not os.path.exists(matrix_dir):
        os.makedirs(matrix_dir)
    i = 1
    while os.path.exists(os.path.join(matrix_dir, f'{user.username}_matrix_{i}.pkl')):
        i += 1
    file_path = os.path.join(matrix_dir, f'{user.username}_matrix_{i}.pkl')
    with open(file_path, 'wb') as f:
        pickle.dump(matrix_data, f)
    print(f"Successfully saved as {file_path}")
    load_matrix_from_file(user)


#2. load the single matrix
def load_matrix_from_file(user):
    file_name = f"{user.username}_matrix.pkl"
    file_path = os.path.join("matrices", file_name)
    if not default_storage.exists(file_path):
        return JsonResponse({"error": "Matrix not found."}, status=404)
    with default_storage.open(file_path, 'rb') as f:
        matrix = pickle.load(f)
    print(matrix)
    return JsonResponse({"matrix": matrix})


#4. to get multiple matrices
def get_matrices_for_user(user):
    BASE_DIR = 'C:\\Users\\ACER\\Desktop\\project\\Sudoku-solver\\Sudokusolver\\matrices\\'
    user_matrices = []
    all_files = os.listdir(BASE_DIR)
    print(f"All files in directory: {all_files}")
    for filename in all_files:
        if filename.startswith(user.username):
            file_path = os.path.join(BASE_DIR, filename)
            with open(file_path, 'rb') as f:
                matrix = pickle.load(f)  
                print(f"Loaded matrix from {filename}: {matrix}")
                user_matrices.append({
                    'filename': filename,
                    'matrix': matrix
                })
    print(f"User matrices found: {user_matrices}")  
    return user_matrices